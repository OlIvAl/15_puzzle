{"version":3,"sources":["constants/config.ts","components/Board.ts","components/Tile.tsx","components/Counter.tsx","selectors.ts","actions/game.ts","constants/actions.ts","components/Modal/Portal.tsx","components/Modal/PopUp.tsx","components/Modal/Backdrop.ts","components/Modal/index.tsx","components/Timer.tsx","components/TopConsole.ts","components/Button.ts","components/BottomConsole.ts","components/Wrapper.ts","App.tsx","constants/modals.ts","reducers/timerReducer.ts","reducers/modalReducer.ts","reducers/counterReducer.ts","helpers.ts","reducers/tilesReducer.ts","reducers/index.ts","store.ts","index.tsx"],"names":["BOARD_TILE_SIZE","BORD_SIZE","StyledBoard","styled","div","_templateObject","StyledTile","Tile_templateObject","_ref","top","_ref2","left","Tile","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","coef","mql","window","matchMedia","concat","mediaQueryListener","bind","assertThisInitialized","onClick","event","matches","setState","_this$props","tile","move","addListener","removeListener","_this$props2","title","react_default","a","createElement","React","Component","Counter","count","tilesSelector","tiles","present","timerSelector","time","timer","hour","Math","floor","minute","second","toString","length","counterSelector","counter","modalSelector","modal","tilesWithCoordsSelector","createSelector","values","map","row","col","initTimerAsyncActionCreator","dispatch","intervalID","setInterval","type","payload","initTimerActionCreator","moveTileAsyncActionCreator","getState","hole","abs","moveTileActionCreator","localStorage","setItem","JSON","stringify","every","removeItem","clearInterval","modalRoot","document","getElementById","Portal","el","style","position","width","height","display","justifyContent","alignItems","appendChild","removeChild","ReactDOM","createPortal","children","StyledPopUpWrapper","PopUp_templateObject","StyledPopUpHeader","_templateObject2","StyledPopUpContent","_templateObject3","StyledPopUpCloseButton","_templateObject4","PopUp","onClose","StyledBackdrop","Backdrop_templateObject","Modal","Portal_Portal","Modal_PopUp","Backdrop","Timer","StyledTopConsole","TopConsole_templateObject","StyledButton","button","Button_templateObject","StyledBottomConsole","BottomConsole_templateObject","StyledWrapper","Wrapper_templateObject","App","keypressHandler","keypress","code","addEventListener","continueTimer","removeEventListener","tilesWithCoords","initNewGame","closeModal","undo","Wrapper","TopConsole","components_Counter","components_Timer","Board","index","components_Tile","key","BottomConsole","Button","disabled","components_Modal","mapDispatchToProps","undefined","find","_getState","_getState$timer","UndoActionCreators","connect","timerReducer","arguments","action","objectSpread","modalReducer","counterReducer","UndoActionTypes","UNDO","generateShuffleTiles","bordTileSize","i","randI","random","shuffleArr","Array","pow","fill","_","reduce","accum","currVal","tilesReducer","0","defineProperty","combineReducers","undoable","middlewares","thunk","initState","parse","getItem","store","createStore","rootReducer","applyMiddleware","apply","render","es","src_App"],"mappings":"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","file":"static/js/main.c2f1ecea.chunk.js","sourcesContent":["export const BOARD_TILE_SIZE: number = 4;\r\n\r\nexport const TILE_SIZE: number = 100;\r\nexport const TILE_MARGIN: number = -1;\r\nexport const BORD_BORDER: number = 3;\r\n\r\nexport const BORD_SIZE: number = (TILE_SIZE * BOARD_TILE_SIZE) + (TILE_MARGIN * (BOARD_TILE_SIZE - 1));","import styled from 'styled-components';\r\nimport {BORD_BORDER, BORD_SIZE} from '../constants/config';\r\n\r\nconst StyledBoard = styled.div`\r\n  width: ${BORD_SIZE}px;\r\n  height: ${BORD_SIZE}px;\r\n  border: ${BORD_BORDER}px solid #aaa;\r\n  background-color: #e5e5e5;\r\n  position: relative;\r\n  \r\n  @media (max-width: ${BORD_SIZE * 1.2}px) {\r\n    width: ${BORD_SIZE / 1.5}px;\r\n    height: ${BORD_SIZE / 1.5}px;\r\n  }\r\n`;\r\n\r\nexport default StyledBoard;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {BORD_SIZE, TILE_SIZE} from '../constants/config';\r\nimport {ITileWithCoords} from '../selectors';\r\nimport {ITile} from '../interfaces/entities';\r\nimport {IMoveTileAsyncActionCreator} from '../interfaces/asyncActionCreators';\r\n\r\ninterface IStyledProps extends Pick<ITileWithCoords, 'top' | 'left'> {\r\n\r\n}\r\n\r\nconst StyledTile = styled('div')<IStyledProps>`\r\n  cursor: pointer;\r\n  background-color: #fff;\r\n  color: #5f5f5f;\r\n  border: 1px solid #aaa;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 36px;\r\n  box-sizing: border-box;\r\n  width: ${TILE_SIZE}px;\r\n  height: ${TILE_SIZE}px;\r\n  position: absolute;\r\n  top: ${({top}: IStyledProps): number => top}px;\r\n  left: ${({left}: IStyledProps): number => left}px;\r\n  \r\n  @media (hover: hover) {\r\n    &:hover {\r\n      background: #f5f5f5;\r\n    }\r\n  }\r\n  \r\n  @media (max-width: ${BORD_SIZE * 1.2}px) {\r\n    width: ${TILE_SIZE / 1.5}px;\r\n    height: ${TILE_SIZE / 1.5}px;\r\n  }\r\n`;\r\n\r\ninterface IProps extends ITileWithCoords {\r\n  tile: ITile;\r\n  move: IMoveTileAsyncActionCreator;\r\n}\r\n\r\ninterface IState {\r\n  coef: number;\r\n}\r\n\r\nclass Tile extends React.Component<IProps, IState> {\r\n  state: IState = {\r\n    coef: 1\r\n  };\r\n\r\n  mql: MediaQueryList = window.matchMedia(`(max-width: ${BORD_SIZE * 1.2}px)`);\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.mediaQueryListener = this.mediaQueryListener.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  mediaQueryListener(event: MediaQueryListEvent): void {\r\n    if (event.matches) {\r\n      this.setState({coef: 1.5});\r\n    } else {\r\n      this.setState({coef: 1});\r\n    }\r\n  }\r\n\r\n  onClick(): void {\r\n    const {\r\n      tile,\r\n      move\r\n    } = this.props;\r\n\r\n    move(tile);\r\n  }\r\n\r\n  componentDidMount(): void {\r\n    this.mql.addListener(this.mediaQueryListener);\r\n\r\n    if (this.mql.matches) {\r\n      this.setState({coef: 1.5});\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(): void {\r\n    this.mql.removeListener(this.mediaQueryListener);\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n    const {\r\n      title,\r\n      top,\r\n      left\r\n    } = this.props;\r\n\r\n    const {coef} = this.state;\r\n\r\n    return (\r\n      <StyledTile\r\n        top={top / coef}\r\n        left={left / coef}\r\n        onClick={this.onClick}\r\n      >\r\n        {title}\r\n      </StyledTile>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tile;","import React from 'react';\r\n\r\ninterface IProps {\r\n  count: number\r\n}\r\n\r\nconst Counter: React.FC<IProps> = ({count}) => (\r\n  <div><strong>Count:</strong> {count}</div>\r\n);\r\n\r\nexport default Counter","import {createSelector, Selector} from 'reselect';\r\nimport {IAppState} from './store';\r\nimport {ITilesState} from './interfaces/states';\r\nimport {ITile} from './interfaces/entities';\r\nimport {TILE_MARGIN, TILE_SIZE} from './constants/config';\r\n\r\nexport interface ITileWithCoords {\r\n  title: number;\r\n  top: number;\r\n  left: number;\r\n}\r\n\r\nexport const tilesSelector: Selector<IAppState, ITilesState> = (state) => state.tiles.present;\r\nexport const timerSelector: Selector<IAppState, string> = (state: IAppState): string => {\r\n  const time: number = state.timer.time;\r\n  const hour: number = Math.floor(time / 3600);\r\n  const minute: number = Math.floor((time - hour * 3600) / 60);\r\n  const second: number = time - hour * 3600 - minute * 60;\r\n\r\n  return `${hour.toString().length < 2 ? `0${hour}` : hour}:`\r\n    + `${minute.toString().length < 2 ? `0${minute}` : minute}:`\r\n    + `${second.toString().length < 2 ? `0${second}` : second}`\r\n};\r\nexport const counterSelector: Selector<IAppState, number> = (state: IAppState): number => state.counter;\r\nexport const modalSelector: Selector<IAppState, string> = (state: IAppState): string => state.modal;\r\n\r\nexport const tilesWithCoordsSelector = createSelector<IAppState, ITilesState, ITileWithCoords[]>(\r\n  tilesSelector,\r\n  (tiles: ITilesState): ITileWithCoords[] => (\r\n    Object.values(tiles).map(({\r\n                                title,\r\n                                row,\r\n                                col\r\n                              }: ITile): ITileWithCoords => ({\r\n      title,\r\n      top: row * TILE_SIZE + row * TILE_MARGIN,\r\n      left: col * TILE_SIZE + col * TILE_MARGIN\r\n    }))\r\n  )\r\n);","import {\r\n  ICloseModalAction,\r\n  IIncrementTimerAction,\r\n  IInitNewGameAction, IInitTimerAction,\r\n  IMoveTileAction,\r\n  IWinAction\r\n} from '../interfaces/actions';\r\nimport {\r\n  ICloseModalActionCreator, IIncrementTimerActionCreator,\r\n  IInitNewGameActionCreator, IInitTimerActionCreator,\r\n  IMoveTileActionCreator,\r\n  IWinActionCreator\r\n} from '../interfaces/actionCreators';\r\nimport {ITile} from '../interfaces/entities';\r\nimport {\r\n  CLOSE_MODAL_ACTION,\r\n  INCREMENT_TIMER_ACTION,\r\n  INIT_NEW_GAME_ACTION, INIT_TIMER_ACTION,\r\n  MOVE_TILE_ACTION,\r\n  WIN_ACTION\r\n} from '../constants/actions';\r\nimport {\r\n  IContinueTimerAsyncActionCreator,\r\n  IInitNewGameAsyncActionCreator,\r\n  IKeypressAsyncActionCreator,\r\n  IMoveTileAsyncActionCreator,\r\n  IWinAsyncActionCreator\r\n} from '../interfaces/asyncActionCreators';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\nimport {IAppState} from '../store';\r\nimport {Action} from 'redux';\r\nimport {ITilesState} from '../interfaces/states';\r\nimport {BOARD_TILE_SIZE} from '../constants/config';\r\n\r\nexport const closeModalActionCreator: ICloseModalActionCreator = (): ICloseModalAction => ({\r\n  type: CLOSE_MODAL_ACTION\r\n});\r\n\r\nconst winActionCreator: IWinActionCreator = (): IWinAction => ({\r\n  type: WIN_ACTION\r\n});\r\n\r\nconst moveTileActionCreator: IMoveTileActionCreator = (tile: ITile): IMoveTileAction => ({\r\n  type: MOVE_TILE_ACTION,\r\n  payload: tile\r\n});\r\n\r\nconst initNewGameActionCreator: IInitNewGameActionCreator = (): IInitNewGameAction => ({\r\n  type: INIT_NEW_GAME_ACTION\r\n});\r\n\r\nconst initTimerActionCreator: IInitTimerActionCreator = (intervalID: number): IInitTimerAction => ({\r\n  type: INIT_TIMER_ACTION,\r\n  payload: intervalID\r\n});\r\n\r\nconst incrementTimerActionCreator: IIncrementTimerActionCreator = (): IIncrementTimerAction => ({\r\n  type: INCREMENT_TIMER_ACTION\r\n});\r\n\r\nexport const initNewGameAsyncActionCreator: IInitNewGameAsyncActionCreator = (): ThunkAction<void, IAppState, null, Action<string>> =>\r\n  (\r\n    dispatch: ThunkDispatch<IAppState, null, Action<string>>,\r\n    getState: () => IAppState\r\n  ): void => {\r\n    const intervalID: number | undefined = getState().timer.intervalID;\r\n\r\n    if (intervalID) {\r\n      clearInterval(intervalID);\r\n    }\r\n\r\n    dispatch(initNewGameActionCreator());\r\n    localStorage.removeItem('state');\r\n  };\r\n\r\nexport const initTimerAsyncActionCreator = (): ThunkAction<void, IAppState, null, Action<string>> =>\r\n  (\r\n    dispatch: ThunkDispatch<IAppState, null, Action<string>>\r\n  ): void => {\r\n    const intervalID: number = setInterval((): void => {\r\n      dispatch(incrementTimerActionCreator());\r\n    }, 1000);\r\n\r\n    dispatch(initTimerActionCreator(intervalID));\r\n  };\r\n\r\nexport const continueTimerAsyncActionCreator: IContinueTimerAsyncActionCreator = (): ThunkAction<void, IAppState, null, Action<string>> =>\r\n  (\r\n    dispatch: ThunkDispatch<IAppState, null, Action<string>>,\r\n    getState: () => IAppState\r\n  ): void => {\r\n    const {counter, timer: {time, intervalID}}: IAppState = getState();\r\n\r\n    if (counter && intervalID && time) {\r\n      dispatch(initTimerAsyncActionCreator());\r\n    }\r\n  };\r\n\r\nconst checkWinAsyncActionCreator: IWinAsyncActionCreator = (): ThunkAction<void, IAppState, null, Action<string>> =>\r\n  (\r\n    dispatch: ThunkDispatch<IAppState, null, Action<string>>,\r\n    getState: () => IAppState\r\n  ): void => {\r\n    const state: IAppState = getState();\r\n    const tiles: ITilesState = state.tiles.present;\r\n    const intervalID: number | undefined = state.timer.intervalID;\r\n\r\n    if((tiles[0].row === (BOARD_TILE_SIZE - 1))\r\n      && (tiles[0].col === (BOARD_TILE_SIZE - 1))\r\n      && Object.values(tiles).every(({title, row, col}: ITile): boolean => (\r\n        !title || (col + 1 + BOARD_TILE_SIZE * row) === title\r\n      ))) {\r\n      dispatch(winActionCreator());\r\n      localStorage.removeItem('state');\r\n\r\n      if (intervalID) {\r\n        clearInterval(intervalID);\r\n      }\r\n    }\r\n  };\r\n\r\nexport const moveTileAsyncActionCreator: IMoveTileAsyncActionCreator = (\r\n  tile: ITile\r\n): ThunkAction<void, IAppState, null, Action<string>> => (\r\n  (\r\n    dispatch: ThunkDispatch<IAppState, null, Action<string>>,\r\n    getState: () => IAppState\r\n  ): void => {\r\n    const state: IAppState = getState();\r\n    const counter: number = state.counter;\r\n    const tiles: ITilesState = state.tiles.present;\r\n    const hole: ITile = tiles[0];\r\n\r\n    if ((Math.abs(hole.col - tile.col) === 1) && (hole.row === tile.row)\r\n      || (Math.abs(hole.row - tile.row) === 1) && (hole.col === tile.col)) {\r\n      // координаты старые, меняем в редьюсере\r\n      dispatch(moveTileActionCreator(tile));\r\n\r\n      localStorage.setItem('state', JSON.stringify(getState()));\r\n\r\n      if (counter === 0) {\r\n        dispatch(initTimerAsyncActionCreator());\r\n      }\r\n\r\n      dispatch(checkWinAsyncActionCreator());\r\n    }\r\n  }\r\n);\r\n\r\nexport const keypressAsyncActionCreator: IKeypressAsyncActionCreator = (\r\n  code: string\r\n): ThunkAction<void, IAppState, null, Action<string>> => (\r\n  (\r\n    dispatch: ThunkDispatch<IAppState, null, Action<string>>,\r\n    getState: () => IAppState\r\n  ): void => {\r\n    const state: IAppState = getState();\r\n    const tiles: ITilesState = state.tiles.present;\r\n    const hole: ITile = tiles[0];\r\n\r\n    let tile: ITile | undefined = undefined;\r\n\r\n    if ((code === 'ArrowUp') && ((hole.row + 1) < BOARD_TILE_SIZE)) {\r\n      tile = Object.values(tiles).find((tile: ITile): boolean => (\r\n        (tile.row === (hole.row + 1)) && (tile.col === hole.col)\r\n      ));\r\n    }\r\n    else if ((code === 'ArrowDown') && ((hole.row) > 0)) {\r\n      tile = Object.values(tiles).find((tile: ITile): boolean => (\r\n        (tile.row === (hole.row - 1)) && (tile.col === hole.col)\r\n      ));\r\n    }\r\n    else if ((code === 'ArrowLeft') && ((hole.col + 1) < BOARD_TILE_SIZE)) {\r\n      tile = Object.values(tiles).find((tile: ITile): boolean => (\r\n        (tile.row === hole.row) && (tile.col === (hole.col + 1))\r\n      ));\r\n    }\r\n    else if ((code === 'ArrowRight') && (hole.col > 0)) {\r\n      tile = Object.values(tiles).find((tile: ITile): boolean => (\r\n        (tile.row === hole.row) && (tile.col === (hole.col - 1))\r\n      ));\r\n    }\r\n\r\n    if (tile) {\r\n      dispatch(moveTileAsyncActionCreator(tile));\r\n    }\r\n  }\r\n);","export const MOVE_TILE_ACTION: string = 'MOVE_TILE_ACTION';\r\nexport const INIT_NEW_GAME_ACTION: string = 'INIT_NEW_GAME_ACTION';\r\nexport const WIN_ACTION: string = 'WIN_ACTION';\r\n\r\nexport const INIT_TIMER_ACTION: string = 'INIT_TIMER_ACTION';\r\nexport const INCREMENT_TIMER_ACTION: string = 'INCREMENT_TIMER_ACTION';\r\n\r\nexport const CLOSE_MODAL_ACTION: string = 'CLOSE_MODAL_ACTION';","import React, {CSSProperties} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\nexport default\r\nclass Portal extends React.Component<IProps> {\r\n  el: HTMLDivElement;\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n\r\n    this.el = document.createElement('div');\r\n    this.el.style.position = 'fixed';\r\n    this.el.style.top = '0';\r\n    this.el.style.left = '0';\r\n    this.el.style.width = '100%';\r\n    this.el.style.height = '100vh';\r\n    this.el.style.display = 'flex';\r\n    this.el.style.justifyContent = 'center';\r\n    this.el.style.alignItems = 'center';\r\n  }\r\n\r\n  componentDidMount() {\r\n    (modalRoot as HTMLDivElement).appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    (modalRoot as HTMLDivElement).removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      this.props.children,\r\n      this.el,\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPopUpWrapper = styled.div`\r\n  width: 300px;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\nconst StyledPopUpHeader = styled.div`\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 12px;\r\n`;\r\nconst StyledPopUpContent = styled.div`\r\n  \r\n`;\r\nconst StyledPopUpCloseButton = styled.div`\r\n  border-radius: 4px;\r\n  padding: 6px 10px;\r\n  background-color: #358ada;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  border: none;\r\n  width: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n`;\r\n\r\ninterface IProps {\r\n  onClose: () => void;\r\n}\r\n\r\nconst PopUp: React.FC<IProps> = ({onClose, children}): JSX.Element => (\r\n  <StyledPopUpWrapper>\r\n    <StyledPopUpHeader>\r\n      You WIN!!!\r\n    </StyledPopUpHeader>\r\n    <StyledPopUpContent>\r\n      {children}\r\n    </StyledPopUpContent>\r\n    <StyledPopUpCloseButton\r\n      onClick={onClose}\r\n    >\r\n      Close\r\n    </StyledPopUpCloseButton>\r\n  </StyledPopUpWrapper>\r\n);\r\n\r\nexport default PopUp;","import styled from 'styled-components';\r\n\r\nconst StyledBackdrop = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0 ,0.5);\r\n  z-index: -1;\r\n`;\r\n\r\nexport default StyledBackdrop;","import React, {CSSProperties} from 'react';\r\nimport Portal from './Portal';\r\nimport PopUp from './PopUp';\r\nimport Backdrop from './Backdrop';\r\n\r\ninterface IProps {\r\n  onClose: () => void;\r\n}\r\n\r\nconst Modal: React.FC<IProps> = ({onClose, children}): JSX.Element => (\r\n  <Portal>\r\n    <PopUp\r\n      onClose={onClose}\r\n    >\r\n      {children}\r\n    </PopUp>\r\n    <Backdrop\r\n      onClick={onClose}\r\n    />\r\n  </Portal>\r\n);\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\ninterface IProps {\r\n  time: string;\r\n}\r\n\r\nconst Timer: React.FC<IProps> = ({time}) => (\r\n  <div><strong>Time:</strong> {time}</div>\r\n);\r\n\r\nexport default Timer;","import styled from 'styled-components';\r\n\r\nconst StyledTopConsole = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 12px;\r\n  width: 100%;\r\n`;\r\n\r\nexport default StyledTopConsole;","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  border-radius: 4px;\r\n  padding: 6px 10px;\r\n  background-color: #0d9095;\r\n  color: #fff;\r\n  text-decoration: none;\r\n  border: none;\r\n  \r\n  &:hover {\r\n    background-color: #17bbc2;\r\n  }\r\n  &:disabled {\r\n    background-color: #999;\r\n  }\r\n`;\r\n\r\nexport default StyledButton;","import styled from 'styled-components';\r\n\r\nconst StyledBottomConsole = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 12px;\r\n  width: 60%;\r\n`;\r\n\r\nexport default StyledBottomConsole;","import styled from 'styled-components';\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport default StyledWrapper;","import React, {RefObject} from 'react';\nimport Bord from './components/Board';\nimport Tile from './components/Tile';\nimport Counter from './components/Counter';\nimport {IAppState} from './store';\nimport {\n  IContinueTimerAsyncActionCreator,\n  IInitNewGameAsyncActionCreator,\n  IKeypressAsyncActionCreator,\n  IMoveTileAsyncActionCreator\n} from './interfaces/asyncActionCreators';\nimport {connect, MapDispatchToPropsNonObject, MapDispatchToPropsParam} from 'react-redux';\nimport {\n  counterSelector,\n  ITileWithCoords,\n  modalSelector,\n  tilesSelector,\n  tilesWithCoordsSelector,\n  timerSelector\n} from './selectors';\nimport {\n  closeModalActionCreator, continueTimerAsyncActionCreator,\n  initNewGameAsyncActionCreator,\n  keypressAsyncActionCreator,\n  moveTileAsyncActionCreator\n} from './actions/game';\nimport Modal from './components/Modal';\nimport {WIN_MODAL} from './constants/modals';\nimport {ICloseModalActionCreator} from './interfaces/actionCreators';\nimport Timer from './components/Timer';\nimport {ITilesState} from './interfaces/states';\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport {Action} from 'redux';\nimport TopConsole from './components/TopConsole';\nimport Button from './components/Button';\nimport BottomConsole from './components/BottomConsole';\nimport Wrapper from './components/Wrapper';\n\ninterface IFieldsFromState extends Pick<IAppState, 'modal'>{\n  tiles: ITilesState;\n  counter: number;\n  tilesWithCoords: ITileWithCoords[];\n  time: string;\n}\n\ninterface IDispatchMethods {\n  initNewGame: IInitNewGameAsyncActionCreator;\n  move: IMoveTileAsyncActionCreator;\n  keypress: IKeypressAsyncActionCreator;\n  closeModal: ICloseModalActionCreator;\n  continueTimer: IContinueTimerAsyncActionCreator;\n  undo: () => Action\n}\n\ninterface IProps extends IFieldsFromState, IDispatchMethods{\n\n}\n\nclass App extends React.Component<IProps> {\n  constructor(props: IProps) {\n    super(props);\n\n    this.keypressHandler = this.keypressHandler.bind(this);\n  }\n\n  keypressHandler(event: KeyboardEvent): void {\n    this.props.keypress(event.code);\n  }\n\n  componentDidMount(): void {\n    document.addEventListener('keydown', this.keypressHandler, false);\n\n    this.props.continueTimer();\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keydown', this.keypressHandler, false);\n  }\n\n  render(): React.ReactNode {\n    const {\n      tilesWithCoords,\n      tiles,\n      counter,\n      time,\n      initNewGame,\n      move,\n      modal,\n      closeModal,\n      undo\n    } = this.props;\n\n    return (\n      <Wrapper>\n        <TopConsole>\n          <Counter\n            count={counter}\n          />\n          <Timer\n            time={time}\n          />\n        </TopConsole>\n\n        <Bord>\n          {tilesWithCoords.map(({\n                                  title,\n                                  top,\n                                  left\n                                }: ITileWithCoords, index: number): JSX.Element | null => (\n            !!title\n              ? (\n                <Tile\n                  title={title}\n                  top={top}\n                  left={left}\n                  tile={tiles[index]}\n                  move={move}\n                  key={title}\n                />\n              )\n              : null\n          ))}\n        </Bord>\n        <BottomConsole>\n          <Button\n            onClick={initNewGame}\n          >\n            New game\n          </Button>\n          <Button\n            onClick={undo}\n            disabled={!counter}\n          >\n            Undo\n          </Button>\n        </BottomConsole>\n\n        {modal === WIN_MODAL\n          ? <Modal\n              onClose={closeModal}\n            >\n              <strong>Count: </strong>{counter}<br/>\n              <strong>Time: </strong>{time}\n            </Modal>\n          : null\n        }\n      </Wrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state: IAppState): IFieldsFromState => ({\n  tilesWithCoords: tilesWithCoordsSelector(state),\n  tiles: tilesSelector(state),\n  time: timerSelector(state),\n  counter: counterSelector(state),\n  modal: modalSelector(state),\n});\n\n// const mapDispatchToProps: IDispatchMethods = {\n// const mapDispatchToProps: MapDispatchToPropsParam<IDispatchMethods, {}> = {\nconst mapDispatchToProps: any = {\n  initNewGame: initNewGameAsyncActionCreator,\n  move: moveTileAsyncActionCreator,\n  keypress: keypressAsyncActionCreator,\n  closeModal: closeModalActionCreator,\n  continueTimer: continueTimerAsyncActionCreator,\n  undo: UndoActionCreators.undo\n};\n\nexport default connect<IFieldsFromState, IDispatchMethods, {}, IAppState>(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","export const WIN_MODAL = 'WIN_MODAL';","import {ITilesState, ITimerState} from '../interfaces/states';\r\nimport {IIncrementTimerAction, IInitNewGameAction, IInitTimerAction} from '../interfaces/actions';\r\nimport {INCREMENT_TIMER_ACTION, INIT_NEW_GAME_ACTION, INIT_TIMER_ACTION} from '../constants/actions';\r\nimport {AnyAction, Reducer} from 'redux';\r\n\r\nconst timerReducer: Reducer<ITimerState, IIncrementTimerAction & IInitNewGameAction & IInitTimerAction> = (\r\n  state = {\r\n    time: 0,\r\n    intervalID: undefined\r\n  },\r\n  action\r\n): ITimerState => {\r\n  switch (action.type) {\r\n    case INIT_TIMER_ACTION:\r\n      return{\r\n        ...state,\r\n        intervalID: action.payload\r\n      };\r\n    case INCREMENT_TIMER_ACTION:\r\n      return {\r\n        ...state,\r\n        time: state.time + 1,\r\n      };\r\n    case INIT_NEW_GAME_ACTION:\r\n      return {\r\n        time: 0,\r\n        intervalID: undefined\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default timerReducer;","import {IWinAction} from '../interfaces/actions';\r\nimport {CLOSE_MODAL_ACTION, WIN_ACTION} from '../constants/actions';\r\nimport {WIN_MODAL} from '../constants/modals';\r\nimport {Reducer} from 'redux';\r\n\r\nconst modalReducer: Reducer<string, IWinAction> = (\r\n  state = '',\r\n  action\r\n): string => {\r\n  switch (action.type) {\r\n    case WIN_ACTION:\r\n      return WIN_MODAL;\r\n    case CLOSE_MODAL_ACTION:\r\n      return '';\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modalReducer;","import {IInitNewGameAction, IMoveTileAction} from '../interfaces/actions';\r\nimport {INIT_NEW_GAME_ACTION, MOVE_TILE_ACTION} from '../constants/actions';\r\nimport {Reducer} from 'redux';\r\nimport {ActionTypes as UndoActionTypes} from 'redux-undo';\r\n\r\nconst counterReducer: Reducer<number, IMoveTileAction & IInitNewGameAction> = (\r\n  state = 0,\r\n  action\r\n): number => {\r\n  switch (action.type) {\r\n    case MOVE_TILE_ACTION:\r\n      return state + 1;\r\n    case INIT_NEW_GAME_ACTION:\r\n      return 0;\r\n    case UndoActionTypes.UNDO:\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default counterReducer;","import {BOARD_TILE_SIZE} from './constants/config';\r\nimport {ITilesState} from './interfaces/states';\r\n\r\nexport function generateShuffleTiles(bordTileSize: number) {\r\n  function shuffleArr<T>(a: T[]): T[] {\r\n    for (let i: number = a.length - 1; i > 0; i--) {\r\n      const randI: number = Math.floor(Math.random() * (i + 1));\r\n      [a[i], a[randI]] = [a[randI], a[i]];\r\n    }\r\n    return a;\r\n  }\r\n\r\n  return shuffleArr<number>(\r\n    Array(bordTileSize ** 2).fill(undefined)\r\n      .map((_, index: number): number => (index))\r\n  ).reduce(\r\n    (\r\n      accum: ITilesState,\r\n      currVal: number,\r\n      index: number\r\n    ): ITilesState => {\r\n      accum[currVal] = {\r\n        title: currVal,\r\n        row: Math.floor(index / BOARD_TILE_SIZE),\r\n        col: index % BOARD_TILE_SIZE\r\n      };\r\n\r\n      return accum;\r\n    },\r\n    {}\r\n  )\r\n}","import {ITilesState} from '../interfaces/states';\r\nimport {IInitNewGameAction, IMoveTileAction} from '../interfaces/actions';\r\nimport {INIT_NEW_GAME_ACTION, MOVE_TILE_ACTION} from '../constants/actions';\r\nimport {ITile} from '../interfaces/entities';\r\nimport {generateShuffleTiles} from '../helpers';\r\nimport {BOARD_TILE_SIZE} from '../constants/config';\r\nimport {Reducer} from 'redux';\r\n\r\nconst tilesReducer: Reducer<ITilesState, IMoveTileAction & IInitNewGameAction> = (\r\n  state = {},\r\n  action\r\n): ITilesState => {\r\n  switch (action.type) {\r\n    case MOVE_TILE_ACTION:\r\n      const hole: ITile = state[0];\r\n      const tile: ITile = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        ...{\r\n          0: {\r\n            title: 0,\r\n            row: tile.row,\r\n            col: tile.col\r\n          }\r\n        },\r\n        ...{\r\n          [tile.title]: {\r\n            title: tile.title,\r\n            row: hole.row,\r\n            col: hole.col\r\n          }\r\n        }\r\n      };\r\n    case INIT_NEW_GAME_ACTION:\r\n      return generateShuffleTiles(BOARD_TILE_SIZE);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tilesReducer;\r\n","import {combineReducers, Reducer} from 'redux';\r\nimport {IAppState} from '../store';\r\nimport timerReducer from './timerReducer';\r\nimport modalReducer from './modalReducer';\r\nimport counterReducer from './counterReducer';\r\nimport tilesReducer from './tilesReducer';\r\nimport undoable from 'redux-undo';\r\n\r\n// ToDo: research it\r\nexport default combineReducers<IAppState>({\r\n  tiles: undoable(tilesReducer as Reducer),\r\n  counter: counterReducer,\r\n  timer: timerReducer,\r\n  modal: modalReducer,\r\n});","import {applyMiddleware, createStore, Middleware, Store} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {BOARD_TILE_SIZE} from \"./constants/config\";\r\nimport rootReducer from './reducers';\r\nimport {ITilesState, ITimerState} from './interfaces/states';\r\nimport {generateShuffleTiles} from './helpers';\r\nimport {StateWithHistory} from \"redux-undo\";\r\n\r\nconst middlewares: Middleware[] = process.env.NODE_ENV === 'development'\r\n  ? [thunk, logger]\r\n  : [thunk];\r\n\r\nexport interface IAppState {\r\n  tiles: StateWithHistory<ITilesState>;\r\n  counter: number;\r\n  timer: ITimerState;\r\n  modal: string;\r\n}\r\n\r\nexport const initState: IAppState = JSON.parse(localStorage.getItem('state') || 'null') || {\r\n  tiles: generateShuffleTiles(BOARD_TILE_SIZE),\r\n/*\r\n  // for tests\r\n  tiles: {\r\n    1: {\r\n      title: 1,\r\n      row: 0,\r\n      col: 0\r\n    },\r\n    2: {\r\n      title: 2,\r\n      row: 0,\r\n      col: 1\r\n    },\r\n    3: {\r\n      title: 3,\r\n      row: 0,\r\n      col: 2\r\n    },\r\n    4: {\r\n      title: 4,\r\n      row: 0,\r\n      col: 3\r\n    },\r\n    5: {\r\n      title: 5,\r\n      row: 1,\r\n      col: 0\r\n    },\r\n    6: {\r\n      title: 6,\r\n      row: 1,\r\n      col: 1\r\n    },\r\n    7: {\r\n      title: 7,\r\n      row: 1,\r\n      col: 2\r\n    },\r\n    8: {\r\n      title: 8,\r\n      row: 1,\r\n      col: 3\r\n    },\r\n    9: {\r\n      title: 9,\r\n      row: 2,\r\n      col: 0\r\n    },\r\n    10: {\r\n      title: 10,\r\n      row: 2,\r\n      col: 1\r\n    },\r\n    11: {\r\n      title: 11,\r\n      row: 2,\r\n      col: 2\r\n    },\r\n    12: {\r\n      title: 12,\r\n      row: 2,\r\n      col: 3\r\n    },\r\n    13: {\r\n      title: 13,\r\n      row: 3,\r\n      col: 0\r\n    },\r\n    14: {\r\n      title: 14,\r\n      row: 3,\r\n      col: 1\r\n    },\r\n    0: {\r\n      title: 0,\r\n      row: 3,\r\n      col: 2\r\n    },\r\n    15: {\r\n      title: 15,\r\n      row: 3,\r\n      col: 3\r\n    },\r\n  },*/\r\n  counter: 0,\r\n  timer: {\r\n    time: 0,\r\n    intervalID: undefined\r\n  },\r\n  modal: ''\r\n};\r\n\r\nconst store: Store = createStore(\r\n  rootReducer,\r\n  initState,\r\n  applyMiddleware(...middlewares)\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}